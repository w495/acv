{"attributes": {"fullName": "qx.bom.element.Animation", "packageName": "qx.bom.element", "isStatic": true, "type": "bootstrap", "name": "Animation"}, "type": "class", "children": [{"attributes": {"text": "<p>This class is responsible for applying CSS3 animations to plain <span class=\"caps\">DOM</span> elements.</p>\n\n<p>The implementation is mostly a cross-browser wrapper for applying the\nanimations, including transforms. If the browser does not support\n<span class=\"caps\">CSS</span> animations, but you have set a keep frame, the keep frame will be applied\nimmediately, thus making the animations optional.</p>\n\n<p>The <span class=\"caps\">API</span> aligns closely to the spec wherever possible.</p>\n\n<p><a href=\"http://www.w3.org/TR/css3-animations/\">http://www.w3.org/TR/css3-animations/</a></p>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"access": "private", "isStatic": true, "name": "__addKeyFrames"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "frames"}, "type": "param", "children": [{"attributes": {"text": "<p>A map of key frames that describe the animation.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "reverse"}, "type": "param", "children": [{"attributes": {"text": "<code>true</code>, if the key frames should\n  be added in reverse order."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper to add the given frames to an internal <span class=\"caps\">CSS</span> stylesheet. It parses\nthe description and adds the key frames to the sheet.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__keepFrame"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "el"}, "type": "param", "children": [{"attributes": {"text": "<p>The element to apply the frame to.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "endFrame"}, "type": "param", "children": [{"attributes": {"text": "<p>The description of the end frame, which is basically\n  a map containing <span class=\"caps\">CSS</span> properties and values including transforms.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method which takes an element and a key frame description and\napplies the properties defined in the given frame to the element. This\nmethod is used to keep the state of the animation.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__normalizeDesc"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "desc"}, "type": "param", "children": [{"attributes": {"text": "<p>The description of the animation.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Preprocessing of the description to make sure every necessary key is\nset to its default.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__onAnimationEnd"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>The native event from the browser.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handler for the animation end.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__validateDesc"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "desc"}, "type": "param", "children": [{"attributes": {"text": "<p>The description of the animation.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Debugging helper to validate the description.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "animate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "el"}, "type": "param", "children": [{"attributes": {"text": "<p>The element to animate.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "desc"}, "type": "param", "children": [{"attributes": {"text": "<p>The animations description.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>This function starts the animation. It takes a <span class=\"caps\">DOM</span> element to apply the\nanimation to, and a description. The description should be a map, which\ncould look like this:</p>\n\n<pre class=\"javascript\">\n{\n  \"duration\": 1000,\n  \"keep\": 100,\n  \"keyFrames\": {\n    0 : {\"opacity\": 1, \"scale\": 1},\n    100 : {\"opacity\": 0, \"scale\": 0}\n  },\n  \"origin\": \"50% 50%\",\n  \"repeat\": 1,\n  \"timing\": \"ease-out\",\n  \"alternate\": false,\n  \"reverse\": false\n}\n</pre>\n\n<p><strong>duration</strong> is the time in milliseconds one animation cycle should take.</p>\n\n<p><strong>keep</strong> is the key frame to apply at the end of the animation. (optional)</p>\n\n<p><strong>keyFrames</strong> is a map of separate frames. Each frame is defined by a\n  number which is the percentage value of time in the animation. The value\n  is a map itself which holds css properties or transforms\n  {@link qx.bom.element.Transform}.</p>\n\n<p><strong>origin</strong> maps to the transform origin {@link qx.bom.element.Transform#setOrigin}</p>\n\n<p><strong>repeat</strong> is the amount of time the animation should be run in\n  sequence. You can also use &#8220;infinite&#8221;.</p>\n\n<p><strong>alternate</strong> defines if every other animation should be run in reverse order.</p>\n\n<p><strong>reverse</strong> defines if the animation should run in reverse order.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>AnimationHandle instance to control\n  the animation.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.bom.element.AnimationHandle"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"access": "private", "name": "__cssAnimationKeys"}, "type": "constant", "children": [{"attributes": {"text": "<p>Map of cross browser <span class=\"caps\">CSS</span> keys.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__transitionKeys"}, "type": "constant", "children": [{"attributes": {"text": "<p>The used keys for transforms.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "type": "Number", "name": "__id", "value": "0"}, "type": "constant"}, {"attributes": {"access": "private", "name": "__rules"}, "type": "constant", "children": [{"attributes": {"text": "<p>Static map of rules</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "type": "String", "name": "__rulePrefix", "value": "Anni"}, "type": "constant"}, {"attributes": {"access": "private", "type": "Null", "name": "__sheet", "value": "null"}, "type": "constant"}]}]}